import json
from typing import Literal, List, Dict, Any

def find(input_str: str, method: Literal["name", "code"]) -> List[Dict[str, Any]]:
    try:
        print(f"üîç –ü–æ–∏—Å–∫: '{input_str}' –º–µ—Ç–æ–¥–æ–º: '{method}'")
        
        # –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
        with open("./app/data.json", "r", encoding="utf-8") as file:
            products = json.load(file)
        
        print(f"üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: {len(products)}")
        if products:
            print(f"üìã –ü–µ—Ä–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç: {products[0]}")
        
        res = []
        search_term = input_str.lower().strip()
        print(f"üîé –ò—â–µ–º: '{search_term}'")
        
        for i, product in enumerate(products):
            try:
                if not isinstance(product, dict):
                    print(f"‚ùå –ü—Ä–æ–¥—É–∫—Ç #{i} –Ω–µ —Å–ª–æ–≤–∞—Ä—å: {product}")
                    continue
                
                if method == "name":
                    if "name" not in product:
                        print(f"‚ö†Ô∏è –ü—Ä–æ–¥—É–∫—Ç #{i} –Ω–µ—Ç –∫–ª—é—á–∞ 'name'")
                        continue
                    
                    product_name = product["name"]
                    if not isinstance(product_name, str):
                        product_name = str(product_name)
                        print(f"‚ÑπÔ∏è –ü—Ä–æ–¥—É–∫—Ç #{i} –∏–º—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–æ –≤ —Å—Ç—Ä–æ–∫—É")
                    
                    if search_term in product_name.lower():
                        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –≤ –ø—Ä–æ–¥—É–∫—Ç–µ #{i}: {product_name}")
                        res.append(product)
                
                elif method == "code":
                    if "pin_code" not in product:
                        print(f"‚ö†Ô∏è –ü—Ä–æ–¥—É–∫—Ç #{i} –Ω–µ—Ç –∫–ª—é—á–∞ 'pin_code'")
                        continue
                    
                    product_code = product["pin_code"]
                    if not isinstance(product_code, str):
                        product_code = str(product_code)
                        print(f"‚ÑπÔ∏è –ü—Ä–æ–¥—É–∫—Ç #{i} –∫–æ–¥ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–æ –≤ —Å—Ç—Ä–æ–∫—É")
                    
                    if search_term in product_code.lower():
                        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –≤ –ø—Ä–æ–¥—É–∫—Ç–µ #{i}: {product_code}")
                        res.append(product)
                        
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–æ–¥—É–∫—Ç–µ #{i}: {e}")
                continue
        
        print(f"üéØ –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {len(res)} —Ç–æ–≤–∞—Ä–æ–≤")
        return res

    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª data.json –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return []
    except json.JSONDecodeError:
        print("‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ JSON!")
        return []
    except Exception as e:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return []

# –¢–µ—Å—Ç–∏—Ä—É–µ–º
print("=" * 50)
results = find("–ù–∞", "name")
print("=" * 50)
print(f"–§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {results}")